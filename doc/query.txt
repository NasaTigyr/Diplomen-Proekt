Здравей, за завършване на учебната година трябва да направя дипломен проект,
който ще е 90 процента от годишната ми оценка. Идеята ми е да напиша онлайн платформа
която да позволява за провеждането на състезания, като служи не само за това да може един
потребител да се регистрира, ами също потребител(който е регистриран като треньор) да може да създава тези събития
. това да може да създава собствени категории, Това е предвидено за бойни искуства. Трябва да бъде достатъчно 
гъвкавно, за да може да се използва от различни стилове, федерации и други различни, малки и големи организации.
СЪщо така искам да мога да виждам в коя категория, кой състезатели са се регистрирали, което ще става като натисна бутон на даденият евент, да ми излезе малка таблица с всички категории. От там, каот натиснеш, с линк  да се
отовори в нов прозорец и да покаже жребия на дадената категоря, като също така има функция за създаването му. 
искам да има бутон за влизане и регистрация, от който да изкачат. Да има navigation bar, който да е с всичко необходимо за използването. 

Искам всичко това да се помисли и за евентуално използване от телефон, което да е бързо, просто и без излишни проблеми и/или забавяния

също така искам това нещо да се случва със следните технологий: html, css, javascript, node.js, express и  mariadb.
Заедно с това, искам да използвам MVC модел за разработка, за който ще ми трябва помощ от теб. Искам също по 
някакъв начин да ме съпитстваш и помагаш в разработванетое на front-end часта, като например какво ще трябва д има.

Не искам да ми изписваш код. Искам да ми напишеш структуриран план за това какво трябва на направя, за да го довърша в рамките на един месец (28 дни). Мисля да започна от часта, която е всъщност изграждането на инфраструктурата на на сайта коео може би значи създаване на подредбата по метода MVC заедно с express.js . искам също да ми се помогне сървъра да се хоства на този лаптоп, обаче да може евентуално да се достига от хора, който са извън моята мрежа. 

ако имаш предложения за това от къде да започнем, можеш да кажеш или да отбележиш.



 Седмица 1: Подготовка и инфраструктура

[]     Проектиране:
        Разпиши основните функционалности и потребителски сценарии.
        Определи структурата на базата данни (таблици за потребители, събития, категории и участници).
        Нарисувай схема на MVC модела (как ще свържеш front-end, back-end и базата данни).

[]     Настройка на средата:
        Инсталирай Node.js, Express.js и MariaDB.
        Създай нов Express проект, като организираш директориите по MVC:
            Models: Логика за работа с базата данни.
            Views: Шаблони за потребителския интерфейс (можеш да използваш EJS).
            Controllers: Логика за обработка на заявки и управление на данните.

[]     Основни маршрути:
        Настрой маршрути за начална страница, регистрация, влизане и потребителски профил.
        Създай шаблонни HTML файлове за тези страници.

[]     Локален сървър и хостване:
        Настрой Express сървъра и го тествай локално.
        Проучи как да настроиш порт форвардинг (например чрез ngrok), за да направиш сървъра достъпен отвън.

Седмица 2: База данни и основна функционалност

[]     Създаване на базата данни:
        Напиши SQL скриптове за създаване на таблиците.
        Свържи Express.js с MariaDB, използвайки mysql2 или sequelize.

[]     Регистрация и вход:
        Реализирай регистрация и вход с валидиране на данни.
        Създай middleware за проверка на автентикация.

[]     CRUD за събития:
        Имплементирай функционалност за създаване, редактиране, изтриване и преглед на събития от треньори.

 Седмица 3: Front-End и разширени функции

[]     UI дизайн:
        Създай навигационна лента (responsive дизайн с HTML и CSS).
        Използвай JavaScript за динамични елементи, като падащи менюта.

[]     Функционалности за потребители:
        Покажи събитията и категориите на главната страница.
        Имплементирай бутон, който показва списък с участници в категория.

[]     Генериране на жребий:
        Направи функция за създаване на случаен жребий за категория.
        Покажи резултатите в нов прозорец/страница.

Седмица 4: Тестване, оптимизация и финализация

[]     Тестване:
        Провери функционалностите на различни устройства (включително стари телефони).
        Тествай с различни потребителски роли (администратор, треньор, участник).

[]     Оптимизация:
        Увери се, че сайтът работи бързо и без забавяния.
        Минимизирай CSS и JavaScript файловете.

[]     Финално хостване:
        Настрой сървъра да работи дългосрочно с помощта на pm2 или подобен инструмент.
        Увери се, че сървърът е достъпен отвън, и го тествай.

Ако това ти изглежда добре, можем да се фокусираме върху конкретни части от плана или да започнем с изграждането на инфраструктурата.

 и за какво ми е node modules? 
ChatGPT said:
ChatGPT

Папката node_modules съдържа всички външни библиотеки и пакети, които сте инсталирали с помощта на npm (Node Package Manager) в проекта си.

Когато изпълните командата:

npm install

npm сваля и инсталира всички библиотеки, които сте посочили в package.json файл, и ги поставя в папката node_modules. Тези библиотеки обикновено се използват за различни функционалности в проекта, като например свързване с база данни, управление на потребители, обработка на шаблони и много други.

Ето какво съдържа node_modules:

    Зависимости: Пакетите, които вашето приложение използва, например express, sequelize, mysql2, и други.
    Изпълними файлове: Някои пакети могат да съдържат и скриптове или изпълними файлове, които можете да използвате в командния ред.
    Локални библиотеки: Библиотеките, които са необходими само за вашето приложение и не са глобално инсталирани.

Защо е важна папката node_modules?

    Зависимости на проекта: Тя съхранява всички библиотеки и модули, от които вашето приложение зависи.
    Изолиране на зависимости: Всеки проект има своите собствени зависимости, които се намират само в папката на проекта, за да няма конфликти с други проекти.
    Размер: Папката може да стане доста голяма, тъй като съдържа всички инсталирани пакети и техните зависимости.

Защо не трябва да качвате node_modules в Git?

Папката node_modules не трябва да бъде качвана в репозиториите (например в GitHub), защото е специфична за всяка среда. Вместо това, в .gitignore файл обикновено добавяте ред, който да игнорира тази папка, като например:

node_modules/

Това означава, че когато друг човек клонира проекта, той може да изпълни npm install и да инсталира отново всички зависимости, без да е нужно да качвате самите файлове.
Как да възстановите съдържанието на node_modules?

Ако някой изтегли проекта или изтриете папката node_modules, можете да възстановите всички зависимости чрез следната команда:

npm install

Това ще инсталира всичко, което е посочено в package.json, и ще създаде нова node_modules папка.

В заключение, node_modules е важна част от Node.js проектите, която съдържа всички външни пакети и библиотеки, нужни за работата на приложението.
