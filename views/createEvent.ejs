<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Create Event - Martial Arts Competitions</title>
    <link rel="stylesheet" href="/styleIndex.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Include flatpickr for date selection -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
</head>
<body>
    <!-- Include the navigation header -->
    <%- include('header', {currentPage: 'create-event', user: user}); %>
    
    <div class="container my-5">
        <h1 class="mb-4">Create a New Event</h1>
        
        <!-- Alert message container (hidden by default) -->
        <div id="alert-container" class="alert d-none mb-4" role="alert"></div>
        
        <form id="create-event-form">
            <div class="row">
                <!-- Left Column -->
                <div class="col-md-6">
                    <div class="mb-3">
                        <label for="name" class="form-label">Event Name*</label>
                        <input type="text" class="form-control" id="name" name="name" required>
                    </div>
                    
                    <div class="mb-3">
                        <label for="description" class="form-label">Description</label>
                        <textarea class="form-control" id="description" name="description" rows="5"></textarea>
                    </div>
                    
                    <div class="mb-3">
                        <label for="address" class="form-label">Address</label>
                        <input type="text" class="form-control" id="address" name="address">
                    </div>
                    
                    <div class="mb-3">
                        <label for="banner_image_file" class="form-label">Banner Image</label>
                        <input type="file" class="form-control" id="banner_image_file" name="banner_image_file" accept="image/*">
                        <small class="text-muted">Upload an image for your event banner</small>
                    </div>
                    <div class="mb-3">
                        <label for="event_type" class="form-label">Event Type*</label>
                        <select class="form-control" id="event_type" name="event_type" required>
                            <option value="">Select Event Type</option>
                            <option value="team">Team event</option>
                            <option value="free_for_all">Free for All</option>
                        </select>
                    </div>
                </div>
                
                <!-- Right Column -->
                <div class="col-md-6">
                    <div class="mb-3">
                        <label for="start_date" class="form-label">Start Date*</label>
                        <input type="text" class="form-control datepicker" id="start_date" name="start_date" required>
                    </div>
                    
                    <div class="mb-3">
                        <label for="end_date" class="form-label">End Date*</label>
                        <input type="text" class="form-control datepicker" id="end_date" name="end_date" required>
                    </div>
                    
                    <div class="mb-3">
                        <label for="registration_start" class="form-label">Registration Start Date*</label>
                        <input type="text" class="form-control datepicker" id="registration_start" name="registration_start" required>
                    </div>
                    
                    <div class="mb-3">
                        <label for="registration_end" class="form-label">Registration End Date*</label>
                        <input type="text" class="form-control datepicker" id="registration_end" name="registration_end" required>
                    </div>
                    
                    <div class="mb-3">
                        <label for="timetable_file" class="form-label">Timetable File</label>
                        <input type="file" class="form-control" id="timetable_file" name="timetable_file">
                        <small class="text-muted">Upload a PDF or Excel file with the event schedule</small>
                    </div>
                </div>
            </div>
            
            <div class="mt-4">
                <h3>Event Categories</h3>
                <p class="text-muted">You can add categories after creating the event.</p>
            </div>
            
            <div class="d-grid gap-2 d-md-flex justify-content-md-end mt-4">
                <button type="button" class="btn btn-outline-secondary me-md-2" onclick="window.location.href='/events'">Cancel</button>
                <button type="submit" class="btn btn-primary">Create Event</button>
            </div>
        </form>
    </div>
    
    <!-- Footer -->
    <footer class="bg-light text-center py-3 mt-5">
        <p>&copy; 2025 Martial Arts Competitions. All Rights Reserved.</p>
    </footer>
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    
    <script>
        // Initialize date pickers
        document.addEventListener('DOMContentLoaded', function() {
            flatpickr(".datepicker", {
                enableTime: true,
                dateFormat: "Y-m-d H:i",
                minDate: "today"
            });
            
            // Set up form submission
            document.getElementById('create-event-form').addEventListener('submit', submitForm);
        });
        
        function submitForm(e) {
            e.preventDefault();
            
            // Create FormData object to handle file uploads
            const formData = new FormData();
            
            // Add form fields to FormData
            formData.append('name', document.getElementById('name').value);
            formData.append('description', document.getElementById('description').value);
            formData.append('address', document.getElementById('address').value);
            const bannerImageFile = document.getElementById('banner_image_file').files[0];
            if (bannerImageFile) {
                formData.append('banner_image_file', bannerImageFile);
            }
            formData.append('start_date', document.getElementById('start_date').value);
            formData.append('end_date', document.getElementById('end_date').value);
            formData.append('registration_start', document.getElementById('registration_start').value);
            formData.append('registration_end', document.getElementById('registration_end').value);
            formData.append('event_type', document.getElementById('event_type').value);
            formData.append('creator_id', '<%= user.id %>'); // Get from session
            
            // Add timetable file if selected
            const timetableFile = document.getElementById('timetable_file').files[0];
            if (timetableFile) {
                formData.append('timetable_file', timetableFile);
            }
            
            // Add timestamps
            const now = new Date().toISOString();
            formData.append('created_at', now);
            formData.append('updated_at', now);
            
            // Validate required fields
            if (!formData.get('name') || !formData.get('start_date') || !formData.get('end_date') || 
                !formData.get('registration_start') || !formData.get('registration_end') || !formData.get('event_type')) {
                showAlert('Please fill in all required fields.', 'danger');
                return;
            }
            
            // Validate dates
            const startDate = new Date(formData.get('start_date'));
            const endDate = new Date(formData.get('end_date'));
            const regStartDate = new Date(formData.get('registration_start'));
            const regEndDate = new Date(formData.get('registration_end'));
            
            if (endDate < startDate) {
                showAlert('End date must be after start date.', 'danger');
                return;
            }
            
            if (regEndDate < regStartDate) {
                showAlert('Registration end date must be after registration start date.', 'danger');
                return;
            }
            
            if (startDate < regEndDate) {
                showAlert('Event start date should be after registration closes.', 'warning');
                // Continue anyway, just a warning
            }
            
            // Submit the form
            fetch('createEvent', {
                method: 'POST',
                body: formData
            })
            .then(response => {
                if (!response.ok) {
                    return response.json().then(data => {
                        throw new Error(data.message || 'Failed to create event');
                    });
                }
                return response.json();
            })
            .then(data => {
                showAlert('Event created successfully!', 'success');
                // Redirect to the event page after a short delay
                setTimeout(() => {
                    window.location.href = `/events/${data.id}`;
                }, 1500);
            })
            .catch(error => {
                showAlert(error.message, 'danger');
            });
        }
        
        function showAlert(message, type) {
            const alertContainer = document.getElementById('alert-container');
            alertContainer.textContent = message;
            alertContainer.className = `alert alert-${type}`;
            alertContainer.classList.remove('d-none');
            
            // Auto-hide success messages after 5 seconds
            if (type === 'success') {
                setTimeout(() => {
                    alertContainer.classList.add('d-none');
                }, 5000);
            }
        }
    </script>
</body>
</html>
