<%- include('partials/header') %>

<div class="container my-5">
  <div class="row">
    <div class="col-md-12">
      <h2>Club Members</h2>
      <p>Club ID: <%= clubId %></p>
      
      <div class="card mb-4">
        <div class="card-header">
          <h4>Invite New Members</h4>
        </div>
        <div class="card-body">
          <div class="row">
            <div class="col-md-8">
              <div class="input-group mb-3">
                <input type="text" id="searchInput" class="form-control" placeholder="Search users by name, username or email" aria-label="Search users">
                <button class="btn btn-outline-secondary" type="button" id="searchButton">Search</button>
              </div>
            </div>
          </div>
          
          <div id="searchResults" class="mt-3">
            <!-- Search results will be displayed here -->
          </div>
        </div>
      </div>
      
      <div class="card mb-4">
        <div class="card-header">
          <h4>Pending Invitations</h4>
        </div>
        <div class="card-body">
          <div id="pendingInvitations">
            <!-- Pending invitations will be displayed here -->
            <p class="text-muted">Loading invitations...</p>
          </div>
        </div>
      </div>
      
      <div class="card">
        <div class="card-header">
          <h4>Current Members</h4>
        </div>
        <div class="card-body">
          <div id="membersList">
            <!-- Members list will be displayed here -->
            <p class="text-muted">Loading members...</p>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
// Store the club ID
const clubId = <%= clubId %>;

// Function to search users
async function searchUsers() {
  const searchQuery = document.getElementById('searchInput').value;
  
  if (searchQuery.length < 3) {
    alert('Please enter at least 3 characters to search');
    return;
  }
  
  try {
    const response = await fetch(`/api/users/search?query=${encodeURIComponent(searchQuery)}`);
    const data = await response.json();
    
    if (response.ok) {
      displaySearchResults(data.users);
    } else {
      alert('Error: ' + data.message);
    }
  } catch (error) {
    console.error('Error searching users:', error);
    alert('An error occurred while searching users. Please try again.');
  }
}

// Function to display search results
function displaySearchResults(users) {
  const resultsDiv = document.getElementById('searchResults');
  
  if (users.length === 0) {
    resultsDiv.innerHTML = '<p class="text-muted">No users found</p>';
    return;
  }
  
  let html = '<div class="list-group">';
  
  users.forEach(user => {
    html += `
      <div class="list-group-item d-flex justify-content-between align-items-center">
        <div>
          <strong>${user.username}</strong> - ${user.full_name}
        </div>
        <button class="btn btn-sm btn-primary invite-btn" data-userid="${user.id}">Invite</button>
      </div>
    `;
  });
  
  html += '</div>';
  resultsDiv.innerHTML = html;
  
  // Add event listeners for invite buttons
  document.querySelectorAll('.invite-btn').forEach(button => {
    button.addEventListener('click', () => inviteUser(button.dataset.userid));
  });
}

// Function to invite a user
async function inviteUser(userId) {
  try {
    const response = await fetch('/api/clubs/invite', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        clubId: clubId,
        userId: userId
      })
    });
    
    const data = await response.json();
    
    if (response.ok) {
      alert('Invitation sent successfully!');
      // Refresh pending invitations
      loadPendingInvitations();
    } else {
      alert('Error: ' + data.message);
    }
  } catch (error) {
    console.error('Error inviting user:', error);
    alert('An error occurred while sending the invitation. Please try again.');
  }
}

// Function to load pending invitations
async function loadPendingInvitations() {
  // This function would load pending invitations from the backend
  // You'd need to create a new endpoint for this
  // For now, we'll just display a placeholder
  const pendingDiv = document.getElementById('pendingInvitations');
  pendingDiv.innerHTML = '<p class="text-muted">You need to implement the backend endpoint to load pending invitations</p>';
}

// Function to load current members
async function loadMembers() {
  // This function would load club members from the backend
  // You'd need to create a new endpoint for this
  // For now, we'll just display a placeholder
  const membersDiv = document.getElementById('membersList');
  membersDiv.innerHTML = '<p class="text-muted">You need to implement the backend endpoint to load club members</p>';
}

// Event listeners
document.getElementById('searchButton').addEventListener('click', searchUsers);
document.getElementById('searchInput').addEventListener('keypress', function(e) {
  if (e.key === 'Enter') {
    searchUsers();
  }
});

// Load data on page load
window.addEventListener('DOMContentLoaded', () => {
  loadPendingInvitations();
  loadMembers();
});
</script>

<%- include('partials/footer') %>
